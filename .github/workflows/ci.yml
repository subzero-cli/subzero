name: Go Build and Release

on:
  push:
    branches:
      - master
    tags:
      - v[0-9].[0-9]+
      - v[0-9].[0-9]+.[0-9]+-beta

jobs:
  build:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Run Tests
        run: make test

  release:
    permissions: write-all
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Check for Tag
        id: check_for_tag
        run: echo "::set-output name=tag::$(echo ${{ github.ref }} | sed 's/refs\/tags\///')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.check_for_tag.outputs.tag }}
          release_name: Release ${{ steps.check_for_tag.outputs.tag }}
          body: "Release ${{ steps.check_for_tag.outputs.tag }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .
          asset_name: subzero-stable
          asset_content_type: application/octet-stream

  nightly_tag:
    permissions: write-all
    name: Create Nightly Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Configure Git
        run: |
          git config --global user.email "ci@subzero.none"
          git config --global user.name "Subzero CI"
        
      - name: Set Build Suffix
        id: set_build_suffix_nightly
        run: echo "::set-output name=suffix::nightly"

      - name: Get Short Commit Hash
        id: get_commit_hash
        run: echo "::set-output name=commit_hash::$(echo ${{ github.sha }} | cut -c1-7)"

      - name: Create Tag
        id: create_nightly_tag
        run: git tag -a nightly-${{ steps.get_commit_hash.outputs.commit_hash }} -m "Nightly Build \# ${{ steps.get_commit_hash.outputs.commit_hash }}"

      # - name: Upload assets
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: subzero
      #     path: dist/*
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: subzero
      #     path: dist/*
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly-${{ steps.get_commit_hash.outputs.commit_hash }}
          files: dist/*
          draft: false
          prerelease: true